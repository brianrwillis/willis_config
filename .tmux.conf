# NOTE: requires xclip to be installed!

# Determine if we're in a [n]vi[m] window
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?(vi|vim|nvim)?x?)(diff)?$'"

# Determine if we're in a [n]vi[m], ssh, man, less, or more window
# I don't know how to determine if in an application _inside_ an ssh session, so be aggressive
is_vim_plus="ps -o state= -o comm= -t '#{pane_tty}' \
             | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?(vi|vim|nvim|ssh|man|less|more)?x?)(diff)?$'"

# Output: no vpn installed: blank
#         vpn on: frog
#         vpn off: X
vpn_is_connected="if [ `mullvad status 2>/dev/null ; echo $?` ] ; then \
                      echo ''; \
                  elif [ `mullvad status 2>/dev/null | cut -c -1 | grep ^C` ]; then \
                      echo 'VPN: 🐸'; \
                         else \
                      echo 'VPN: ❌'; \
                  fi"

# Ctrl-a = prefix
set-option -g prefix C-a
unbind-key C-u
bind-key C-a send-prefix

# Disable "lock up everything with no recovery option" mode and remap to fullscreen
bind-key C-z resize-pane -Z

# Set copy mode to vi
set-window-option -g mode-keys vi

# Update the status bar 1 time per second
set -g status-interval 1

# Don't use escape as meta key
set -s escape-time 0

# BEEG history
set-option -g history-limit 12000


############## Pretty ##############
set -g default-terminal "screen-256color"
set -g window-style 'fg=default,bg=default'
set -g window-active-style 'fg=default,bg=default'

set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour49
set -g window-status-current-style fg=colour49

set -g status-right-length 200
set -g status-left "#[fg=green][#S] #[fg=yellow](#P) "

date="#(date '+%%A %%D %%I:%%M:%%S %%p %%Z')"
utc_date="#(date -u '+%%D %%H:%%M:%%S %%Z')"
set -g status-right "#($vpn_is_connected)  #[fg=colour79]$date :: $utc_date"

set -g status-fg white
set -g status-bg grey19
####################################


############## Mouse things ##############
set -g mouse on

# Fuck your mouse shit
unbind-key -T copy-mode-vi MouseDragEnd1Pane
unbind-key -T copy-mode    MouseDown1Pane
unbind-key -T copy-mode    MouseDrag1Pane
unbind-key -T copy-mode    MouseDragEnd1Pane
unbind-key -n              M-MouseDown3Pane

# Select, copy, paste (requires xclip)
bind-key -T copy-mode-vi y              send-keys -X copy-pipe "xclip -selection clipboard -i"
bind-key -T copy-mode-vi v              send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# Triple click highlight
bind-key -n              TripleClick1Pane if-shell "$is_vim" \
                                                   "send-keys -M TripleClick1Pane" \
                                                   "select-pane \;\
                                                    copy-mode \;\
                                                    send-keys -X select-line"
bind-key -T copy-mode-vi TripleClick1Pane select-pane \;\
                                          send-keys -X select-line


# Double click highlight
bind-key -n              DoubleClick1Pane if-shell "$is_vim" \
                                                   "send-keys -M DoubleClick1Pane" \
                                                   "select-pane \;\
                                                    copy-mode  \;\
                                                    send-keys -X select-word"
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \;\
                                          send-keys -X select-word
##########################################


# Page-up and C-U goes into buffer mode one page up if not in vim and friends
bind-key -n PageUp if-shell "$is_vim_plus" "send-keys PageUp" "copy-mode -u"
bind-key -n C-u if-shell "$is_vim_plus" "send-keys ''" "copy-mode \; send-keys ''"

# Vim-like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# Window switching (yes, 'm' to go previous...)
bind n select-window -n
bind m select-window -p
bind C-n select-window -n
bind C-m select-window -p

# When renaming a window, don't autopopualate the current name
bind-key , command-prompt "rename-window '%%'"

# Resize but better
bind -n M-Left  resize-pane -L 5
bind -n M-Down  resize-pane -D 5
bind -n M-Up    resize-pane -U 5
bind -n M-Right resize-pane -R 5

# Better pane switching: \ = vertical, - = horizontal
bind "\\" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"

# Ctrl-b to go back to previous shell cmd line
bind-key -n C-b              if-shell "$is_vim" "send-keys " \
                             "copy-mode \;\
                              send-keys -X start-of-line \;\
                              send-keys -X search-backward '^\\w\+@\\w\+.*($\|%)' \;\
                              send-keys '^'"
bind-key -T copy-mode-vi C-b if-shell "$is_vim" "send-keys " \
                             "send-keys -X start-of-line \;\
                              send-keys -X search-backward '^\\w\+@\\w\+.*($\|%)' \;\
                              send-keys '^'"

# Kill all detached tmux windows
# Bind-key -n F2 run-shell "tmux list-sessions | grep -v ' \(attached\)' | cut -d: -f1 | xargs -n 1 tmux kill-session -t 2>/dev/null || true" \;\
                         display-message "Old tmux sessions successfully fucked"

# r to reload tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Config reloaded ^_^"

# Send a shell command to all panes
bind-key p command-prompt -p "Panes command:" \
                             "set-option -w synchronize-panes on \;\
                              send-keys '%%' \;\
                              set-option -w -u synchronize-panes"

# FIXME: $is_vim only triggers on the executing pane
# bind-key p command-prompt -p "Panes command: " \
#                              "set-option -w synchronize-panes on \;\
#                               if-shell \"$is_vim\" \"\" \"send-keys '%%'\" \;\
#                               set-option -w -u synchronize-panes"


############## Fun remaps ##############
# Ctrl-w to git status
bind-key -n C-w if-shell "$is_vim_plus" "send-keys ''" "send-keys 'git status'"

# Ctrl-o to make a commit message
bind-key -n C-o if-shell "$is_vim_plus" "send-keys ''" "send-keys 'git commit -m \"\"' OD"

# Ctrl-l to make an add -u commit message
bind-key -n C-l if-shell "$is_vim_plus" "send-keys ''" "send-keys 'git commit -am \"\"' OD"

# Ctrl-f to git diff
bind-key -n C-f if-shell "$is_vim_plus" "send-keys ''" "send-keys 'git diff '"

# Ctrl-k to git checkout
bind-key -n C-k if-shell "$is_vim_plus" "send-keys ''" "send-keys 'git checkout '"

# Ctrl-j = ESC
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "send-keys "
########################################


############## Resurrection ##############
set -g @resurrect-dir "~/.config/tmux/resurrect"

# Add git to list of processes to keep track of
set -g @resurrect-processes 'git ssh'

# Try to restore [n]vim sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Try to restore pane contents
set -g @resurrect-capture-pane-contents 'on'

run-shell ~/repos/willis_config/tmux-resurrect/resurrect.tmux
##########################################


############## Tmux-copy ##############
# x in copy mode to xgd-open on file or url
set -g @open 'x'

# Ctrl-o in copy mode to open highlighted section with $EDITOR
set -g @open-editor 'C-o'

run-shell ~/repos/willis_config/tmux-open/open.tmux
#######################################
