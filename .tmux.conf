# NOTE: requires xlip to be installed!

# determine if we're in a vim window
# TODO: or ssh
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Ctrl-a = prefix
set-option -g prefix C-a
unbind-key C-a
unbind-key C-u
bind-key C-a send-prefix

# set copy mode to vi
set-window-option -g mode-keys vi

# mouse
set -g mouse on

# don't use escape as meta key
set -s escape-time 0

# pretty
set -g default-terminal "screen-256color"
set -g window-style 'fg=default,bg=default'
set -g window-active-style 'fg=default,bg=default'

set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour49

setw -g monitor-activity on
set -g visual-activity on

set -g status-left "#[fg=green][#S] #[fg=yellow](#P) "
set -g status-right "#[fg=cyan]%A, %d %b %Y %I:%M %p"

set -g status-fg white
set -g status-bg black

set -g window-status-current-style fg=white
set -g window-status-current-style bright

# BEEG history
set-option -g history-limit 5000

# mouse does different buffer stuff
unbind -T copy-mode-vi MouseDragEnd1Pane

# copy and paste using mouse
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi MouseDown1Pane select-pane \; send -X clear-selection
bind-key -n page-up send-keys [

# vim-like pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# resize but better
bind -n M-Left resize-pane -L 5
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5
bind -n M-Right resize-pane -R 5

# better pane switching: \ = vertical, - = horizontal
bind "\\" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"

# Width="$(expr $(tmux display -p \"#{window_width}\") / 3)"

# split into cool windows F1 = 3 windows for python, F2 = 4/5 windows for c
bind-key -n F1 if-shell "[ $(tmux list-panes | wc -l) -eq 4 ]" \
                        "" \
                        "splitw -h -p 50 -c '#{pane_current_path}'\;\
                        splitw -v -p 15 -c '#{pane_current_path}'\;\
                        send-keys 'clear' \;\
                        send-keys 'cd ~/repos/cosmos-environment \
                        clear./launcher.py' \; select-pane -t 0" 
                        
bind-key -n F2 if-shell "[ $(tmux list-panes | wc -l) -eq 4 ]" \
                        "select-pane -t 0 \;\
                         splitw -h -p 50 -c '#{pane_current_path}'\;\
                        resize-pane -x 175 -t 2" \
                        "splitw -h -p 50 -c '#{pane_current_path}'\;\
                        splitw -v -p 32 -c '#{pane_current_path}'\;\
                        splitw -v -p 30 -t 0 -c '#{pane_current_path}'\;\
                        select-pane -t 0"


# remove all swap files
#TODO: find out why so slow
bind-key -n F3 run-shell "find . -name \"*.sw*\" -delete | echo \"\" > /dev/null 2>&1" \;\
                         display-message "Swap files successfully fucked"

# kill all ruby (cosmos) apps
bind-key -n F6 run-shell -b "killall ruby | echo \"\" > /dev/null 2>&1" \;\
                            display-message "Cosmos successfully fucked"

# <prefix> r = reload tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Config reloaded ^_^"

# Ctrl-w to git status
bind-key -n C-w if-shell "$is_vim" "splitw -v -p 50 -c '#{pane_current_path}'\;\
                         send-keys 'clear' \; send-keys 'git status'" \
                         "send-keys 'git status'"
# Ctrl-o to make a commit message
bind-key -n C-o if-shell "$is_vim" "send-keys ''" "send-keys 'git commit -m \"\"' OD"
# Ctrl-l to make an add -u commit message
bind-key -n C-l if-shell "$is_vim" "send-keys ''" "send-keys 'git commit -am \"\"' OD"
# Ctrl-f to git diff 
bind-key -n C-f if-shell "$is_vim" "send-keys ''" "send-keys 'git diff '"
# Ctrl-k to git checkout
bind-key -n C-k if-shell "$is_vim" "send-keys ''" "send-keys 'git checkout '"

# Ctrl-j = ESC
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "send-keys "


